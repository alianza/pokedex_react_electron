{"version":3,"sources":["components/PokéHeader/PokéHeader.js","helpers/ScrollToTop.js","components/PokéMenu/PokéMenu.js","components/PokéFooter/PokéFooter.js","helpers/services/PokémonService.js","helpers/Capitalize.js","helpers/TypeToColor.js","entity/Pokémon.js","helpers/Loader.js","helpers/services/CatchService.js","img/pokéball_closed.png","img/pokéball_open.png","components/PokémonDetails/PokémonDetails.js","components/PokémonItem/PokémonItem.js","components/Pokémons/AllPokémons/AllPokémons.js","components/Types/TypeItem/TypeItem.js","components/Types/Types.js","components/Pokémons/TypePokémons/TypePokémons.js","components/PokémonItem/MyPokémonItem.js","components/Pokémons/MyPokémons/MyPokémons.js","App.js","reportWebVitals.js","index.js"],"names":["PokéHeader","props","className","onClick","e","onMenuClick","title","scrollToTop","requestAnimationFrame","window","scrollTo","top","behavior","PokéMenu","pathname","useLocation","to","isActive","match","includes","url","activeClassName","exact","alert","PokéFooter","PokémonService","baseUrl","basePageLimit","totalNumberOfPokémon","doLoad","this","fetch","then","response","status","json","data","catch","console","log","getPokémons","jsonData","getPagedPokémons","offset","getPokémon","pokémonName","getTypes","getTypePokémons","type","Object","defineProperty","getOwnPropertyDescriptor","results","forEach","result","index","pokemon","getRandomPokémon","getTotalNumberOfPokémon","randomIndex","Math","floor","random","Promise","resolve","count","capitalize","value","toString","charAt","toUpperCase","slice","typeToColor","Type","Sprites","Pokémon","name","types","Array","sprites","Loader","showLoader","document","getElementById","classList","add","hideLoader","remove","CatchService","pokémon","pokémons","getAll","unshift","localStorage","setItem","JSON","stringify","splice","get","pokémonToReturn","parse","getItem","PokémonDetails","options","weekday","year","month","day","componentDidMount","params","pokemonName","loadPokémon","path","loadRandomPokémon","enableBodyScroll","body","addEventListener","handleKeyDown","setState","updateCaughtState","catchPokémon","state","caught","date","Date","updateCaughtDate","key","goBack","toggleImage","toggle","history","enable","Fragment","toLocaleDateString","base_experience","height","weight","map","style","backgroundColor","stats","stat","width","base_stat","id","back_default","alt","src","front_default","pokéball_closed","data-tip","backgroundImage","pokéball_open","removeEventListener","Component","withRouter","PokémonItem","pokémonRef","backgroundSize","backgroundPosition","prevProps","prevState","snapshot","AllPokémons","initData","page","parseInt","loadPagedPokémon","loadPokémons","loadNextPage","next","loadPreviousPage","previous","sort","reverse","i","length","TypeItem","Types","loadTypes","TypePokémons","loadTypePokémons","MyPokémonItem","MyPokémons","loadCaughtPokémons","App","onResize","toggleMenu","innerWidth","render","atEnter","opacity","atLeave","atActive","mapStyles","styles","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.484266ad.chunk.js","sourcesContent":["import './PokéHeader.scss'\r\nimport React from \"react\";\r\n\r\nfunction PokéHeader(props) {\r\n    return (\r\n        <div className=\"header\">\r\n            <div onClick={e => props.onMenuClick(e)} className=\"menu-icon\">\r\n                <div/>\r\n                <div/>\r\n                <div/>\r\n            </div>\r\n            <h1 className=\"header-title\">{props.title}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokéHeader;\r\n","const scrollToTop = () => {\r\n    requestAnimationFrame(\r\n        (function() {\r\n            window.scrollTo({top: 0, behavior: 'smooth'});\r\n        })\r\n    );\r\n}\r\n\r\nexport default scrollToTop;\r\n","import './PokéMenu.scss'\r\nimport React from \"react\";\r\nimport {NavLink, useLocation} from \"react-router-dom\";\r\nimport scrollToTop from \"../../helpers/ScrollToTop\";\r\n\r\nfunction PokéMenu(props) {\r\n    const { pathname } = useLocation();\r\n\r\n    const about = () => {\r\n        alert('This is a Web PokéDex Application!\\n' +\r\n            'Discover countless Pokemon and their info!\\n' +\r\n            'Made by Jan-Willem van Bremen - 2020');\r\n    }\r\n\r\n    return (\r\n        <div className=\"menu\">\r\n            <div onClick={e => props.onMenuClick(e)} className=\"menu-close\">✖</div>\r\n            <h1>Menu</h1>\r\n            <ul className=\"menu-top\">\r\n                <li><NavLink to={'/'} isActive={ (match) => pathname.includes('/page') || match.url === '/'}\r\n                             activeClassName={'active'} onClick={() => scrollToTop()}>Home</NavLink></li>\r\n                <li><NavLink to={'/types'} isActive={ () => pathname.includes('/type') } activeClassName={'active'}>Types</NavLink></li>\r\n                <li><NavLink exact to={'/my_pokémons'} isActive={ () => pathname.includes('/my_pokémons') }\r\n                             activeClassName={'active'}>My Pokémons</NavLink></li>\r\n                <li><NavLink exact to={'/random'} activeClassName={'active'}>Random Pokémon</NavLink></li>\r\n                <li onClick={about}>About</li>\r\n            </ul>\r\n            <p className=\"menu-bottom\">Jan-Willem van Bremen</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokéMenu;\r\n","import './PokéFooter.scss'\r\nimport React from \"react\";\r\n\r\nfunction PokéFooter() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>PokéDex React App</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokéFooter;\r\n","\r\nconst PokémonService = {\r\n    baseUrl: \"https://pokeapi.co/api/v2\",\r\n    basePageLimit: 20,\r\n    totalNumberOfPokémon: 0,\r\n\r\n    doLoad(url) { // Base method for doing http Get requests\r\n        if (!url.includes(this.baseUrl)) { url = this.baseUrl + url; }\r\n\r\n        // console.log(url)\r\n        return fetch(url).then(response => {\r\n            if (response.status === 404) { return ''; }\r\n            if (response.status === 200) { return response.json(); }})\r\n            .then(data => {\r\n            // console.log(data);\r\n            return data}).catch(e => { console.log('Error', e) });\r\n    },\r\n\r\n    getPokémons() {\r\n        return this.doLoad('/pokemon').then(jsonData => {\r\n            return jsonData;\r\n        }).catch(e => { console.log('Error', e) });\r\n    },\r\n\r\n    getPagedPokémons(offset) {\r\n        return this.doLoad(`/pokemon?offset=${offset}&limit=${this.basePageLimit}`).then(jsonData => {\r\n            return jsonData;\r\n        }).catch(e => { console.log('Error', e) });\r\n    },\r\n\r\n    getPokémon(pokémonName) {\r\n        return this.doLoad(`/pokemon/${pokémonName}`).then(jsonData => {\r\n            return jsonData;\r\n        }).catch(e => { console.log('Error', e) });\r\n    },\r\n\r\n    getTypes() {\r\n        return this.doLoad('/type/').then(jsonData => {\r\n            return jsonData;\r\n        }).catch(e => { console.log('Error', e) });\r\n    },\r\n\r\n    getTypePokémons(type) {\r\n        return this.doLoad(`/type/${type}`).then(jsonData => {\r\n            Object.defineProperty(jsonData, 'results', Object.getOwnPropertyDescriptor(jsonData, 'pokemon'));\r\n            delete jsonData['pokemon']; // Change name of pokémons prop to results\r\n            jsonData.results.forEach(function (result, index) {\r\n                jsonData.results[index] = result.pokemon; // Lift all pokémons results one level up in hierarchy\r\n            });\r\n            return jsonData;\r\n        }).catch(e => { console.log('Error', e) });\r\n    },\r\n\r\n    getRandomPokémon() {\r\n        return this.getTotalNumberOfPokémon().then(() => {\r\n            const randomIndex = Math.floor(Math.random() * (this.totalNumberOfPokémon - 1)) + 1;\r\n            return this.getPokémon(randomIndex).then(jsonData => { return jsonData; })\r\n                .catch(e => {console.log('Error', e)});\r\n        });\r\n    },\r\n\r\n    getTotalNumberOfPokémon() {\r\n        if (!this.totalNumberOfPokémon) { // If total number of pokémon is not yet known\r\n            return this.doLoad('/pokemon-species/?limit=0').then(jsonData => {\r\n                this.totalNumberOfPokémon = jsonData.count;\r\n                return jsonData;\r\n            }).catch(e => { console.log('Error', e) });\r\n        } else { // If total number of pokémon is known return total number of pokémons\r\n            return new Promise(resolve => {resolve(this.totalNumberOfPokémon)})\r\n        }\r\n    },\r\n}\r\n\r\nexport default PokémonService;\r\n","const capitalize = (value: string) => {\r\n    if (!value) return ''\r\n    value = value.toString();\r\n    return value.charAt(0).toUpperCase() + value.slice(1);\r\n}\r\n\r\nexport default capitalize;\r\n","const typeToColor = (type: string) => {\r\n    if (!type) return ''\r\n    type = type.toString()\r\n    switch (type) {\r\n        case 'grass' : return 'green'\r\n        case 'fire' : return 'red'\r\n        case 'poison' : return 'olivedrab'\r\n        case 'flying' : return 'skyblue'\r\n        case 'water' : return 'cornflowerblue'\r\n        case 'bug' : return 'brown'\r\n        case 'normal' : return 'blanchedalmond'\r\n        case 'electric' : return 'yellow'\r\n        case 'ground' : return 'gray'\r\n        case 'fairy' : return 'pink'\r\n        case 'fighting' : return 'orange'\r\n        case 'psychic' : return 'mediumpurple'\r\n        case 'rock' : return 'dimgray'\r\n        case 'dragon' : return 'darkorange'\r\n        case 'steel' : return 'slategray'\r\n        case 'ghost' : return 'lightgray'\r\n        case 'dark' : return 'darkslategrey'\r\n        case 'ice' : return 'aliceblue'\r\n        case 'shadow' : return 'black'\r\n        default : return ''\r\n    }\r\n}\r\n\r\nexport default typeToColor;\r\n","class Type {\r\n    name: { 'background-color': string } | { background: string };\r\n    url: string;\r\n}\r\n\r\nclass Types {\r\n    slot: number;\r\n    type: Type;\r\n}\r\n\r\nclass Sprites {\r\n    front_default: string;\r\n    back_default: string;\r\n}\r\n\r\nclass Stat {\r\n    name: string;\r\n    url: string;\r\n}\r\n\r\nclass Stats {\r\n    base_stat: number;\r\n    effort: number;\r\n    stat: Stat;\r\n}\r\n\r\nexport class Pokémon {\r\n    constructor() {\r\n        this.name = '';\r\n        this.types = new Array(new Type())\r\n        this.sprites = new Sprites();\r\n    }\r\n\r\n    name: String;\r\n    base_experience: number;\r\n    height: number;\r\n    weight: number;\r\n    sprites: Sprites;\r\n    stats: Stats[];\r\n    types: Types[];\r\n}\r\n","const Loader = {\r\n    showLoader()  {\r\n        document.getElementById('loader').classList.add('active');\r\n    },\r\n\r\n    hideLoader()  {\r\n        document.getElementById('loader').classList.remove('active');\r\n    }\r\n}\r\n\r\nexport default Loader;\r\n","const CatchService = {\r\n    add(pokémon)  {\r\n        let pokémons = this.getAll() || [];\r\n        pokémons.unshift(pokémon); // Add pokémon to beginning of array\r\n        localStorage.setItem('pokémons', JSON.stringify(pokémons));\r\n    },\r\n\r\n    remove(pokémonName)  {\r\n        let pokémons = this.getAll() || [];\r\n        pokémons.forEach(function (pokémon, index) {\r\n            if (pokémon.name === pokémonName) {\r\n                pokémons.splice(index, 1);\r\n            }\r\n        });\r\n        localStorage.setItem('pokémons', JSON.stringify(pokémons));\r\n    },\r\n\r\n    get(pokémonName) {\r\n        let pokémonToReturn;\r\n        let pokémons = this.getAll() || [];\r\n        pokémons.forEach(function (pokémon) {\r\n            if (pokémon.name === pokémonName) {\r\n                pokémonToReturn = pokémon;\r\n            }\r\n        });\r\n        return pokémonToReturn;\r\n    },\r\n\r\n    getAll() {\r\n        return JSON.parse(localStorage.getItem('pokémons'));\r\n    }\r\n}\r\n\r\nexport default CatchService;\r\n","export default __webpack_public_path__ + \"static/media/pokéball_closed.9fc0eeae.png\";","export default __webpack_public_path__ + \"static/media/pokéball_open.6627101a.png\";","import './PokémonDetails.scss'\r\nimport React, {Component} from 'react';\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport PokémonService from \"../../helpers/services/PokémonService\";\r\nimport capitalize from \"../../helpers/Capitalize\";\r\nimport typeToColor from \"../../helpers/TypeToColor\";\r\nimport {Pokémon} from \"../../entity/Pokémon\";\r\nimport Loader from \"../../helpers/Loader\";\r\nimport scrollToTop from \"../../helpers/ScrollToTop\";\r\nimport CatchService from \"../../helpers/services/CatchService\";\r\nimport pokéball_closed from \"../../img/pokéball_closed.png\"\r\nimport pokéball_open from \"../../img/pokéball_open.png\"\r\n\r\nclass PokémonDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pokémon: new Pokémon(),\r\n            caught: false,\r\n        }\r\n    }\r\n\r\n    options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div onClick={this.goBack} className=\"backdrop\"/>\r\n\r\n    {this.state.pokémon.name &&\r\n        <React.Fragment>\r\n            <div className=\"details\">\r\n                <div onClick={this.goBack} className=\"details-close\">✖</div>\r\n\r\n                <div className=\"details-container\">\r\n                    <div className=\"details-info\">\r\n                        <h1 className=\"details-info-name\">{capitalize(this.state.pokémon.name)}</h1>\r\n{this.state.pokémon.date && <h3 className=\"details-info-date\">{\"Caught: \" + new Date(this.state.pokémon.date).toLocaleDateString(\"en-US\", this.options)}</h3>}\r\n                        <div className=\"details-info-profile\">\r\n                            <h2>Profile</h2>\r\n                            <dl>\r\n                                <dt><h4>Base Experience</h4></dt>\r\n                                <dd>{this.state.pokémon.base_experience} xp</dd>\r\n\r\n                                <dt><h4>Height</h4></dt>\r\n                                <dd>{this.state.pokémon.height / 10} m</dd>\r\n\r\n                                <dt><h4>Weight</h4></dt>\r\n                                <dd>{this.state.pokémon.weight / 10} kg</dd>\r\n                            </dl>\r\n                        </div>\r\n                        <div className=\"details-info-types\">\r\n                            <h2>Types</h2>\r\n                            {this.state.pokémon.types.map((type) => {\r\n                                return <Link onClick={() => {this.enableBodyScroll(true); scrollToTop()}}\r\n                                        key={type.type.name} to={`/type/${type.type.name}`}\r\n                                        style={{backgroundColor: typeToColor(type.type.name)}}\r\n                                        className=\"details-info-types-type\">{capitalize(type.type.name)}</Link>})}\r\n                        </div>\r\n                        <div className=\"details-info-stats\">\r\n                            <h2>Stats</h2>\r\n                            {this.state.pokémon.stats.map((stat) => {\r\n                                return <div className=\"details-info-stats-stat\" key={stat.stat.name}>\r\n                                    {capitalize(stat.stat.name)}\r\n                                    <div style={{\r\n                                      width: `${stat.base_stat}px`,\r\n                                      backgroundColor: typeToColor(this.state.pokémon.types[0].type.name)}}>{stat.base_stat}</div>\r\n                                </div>})}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"details-image\">\r\n                        <div id=\"flip-box\" className={!this.state.pokémon.sprites.back_default ? 'disabled' : ''}>\r\n                            <div id=\"flip-box-inner\">\r\n                                <div id=\"flip-box-front\">\r\n                                    <img alt=\"Pokemon front\" src={this.state.pokémon.sprites.front_default || pokéball_closed}/>\r\n                                </div>\r\n{this.state.pokémon.sprites.back_default && <div id=\"flip-box-back\">\r\n                                                <img alt=\"Pokemon back\" src={this.state.pokémon.sprites.back_default}/>\r\n                                            </div>}\r\n                            </div>\r\n                        </div>\r\n{this.state.pokémon.sprites.back_default && <button onClick={this.toggleImage} className=\"button\">↻</button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n{this.props.match.path === \"/random\" && <div className=\"button button-random\" onClick={this.loadRandomPokémon}>Next →</div>}\r\n\r\n            <div className=\"button button-catch tooltip\"\r\n                 data-tip={this.state.caught ? `Let ${capitalize(this.state.pokémon.name)} go!` : `Catch ${capitalize(this.state.pokémon.name)}!`}\r\n                 style={{backgroundImage: `url( ${this.state.caught ? pokéball_closed : pokéball_open} )`}} onClick={this.catchPokémon}/>\r\n\r\n        </React.Fragment>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.match.params.pokemonName) {\r\n            this.loadPokémon();\r\n        } else if (this.props.match.path === \"/random\") {\r\n            this.loadRandomPokémon();\r\n        }\r\n        this.enableBodyScroll(false);\r\n        document.body.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.enableBodyScroll(true);\r\n        document.body.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    loadPokémon = () => {\r\n        Loader.showLoader();\r\n        PokémonService.getPokémon(this.props.match.params.pokemonName).then(json => {\r\n            if (json) {\r\n                this.setState({pokémon: json});\r\n                this.updateCaughtState();\r\n                Loader.hideLoader();\r\n            }\r\n        });\r\n    }\r\n\r\n    loadRandomPokémon = () => {\r\n        Loader.showLoader();\r\n        PokémonService.getRandomPokémon().then(json => {\r\n            this.setState({pokémon: json});\r\n            this.updateCaughtState();\r\n            Loader.hideLoader();\r\n        });\r\n    }\r\n\r\n    catchPokémon = () => {\r\n        if (this.state.caught) {\r\n            this.setState({caught: false, pokémon: {...this.state.pokémon, date: null}}, () => {\r\n                CatchService.remove(this.state.pokémon.name); }); // Remove date from state pokémon and remove from local storage\r\n        } else {\r\n            this.setState({caught: true, pokémon: {...this.state.pokémon, date: new Date()}}, () => {\r\n                CatchService.add(this.state.pokémon); }); // Add date from state pokémon and add from local storage\r\n        }\r\n    }\r\n\r\n    updateCaughtState = () => {\r\n        this.setState({caught: !!CatchService.get(this.state.pokémon.name)});\r\n        if (this.state.caught) { this.updateCaughtDate(); }\r\n    }\r\n\r\n    updateCaughtDate = () => {\r\n        this.setState({pokémon: {...this.state.pokémon, date: CatchService.get(this.state.pokémon.name).date || ''}});\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.key === \"Escape\") { this.goBack(); }\r\n    }\r\n\r\n    toggleImage = () => {\r\n        document.getElementById('flip-box').classList.toggle('active');\r\n    }\r\n\r\n    goBack = () => {\r\n        this.enableBodyScroll(true);\r\n        this.props.history.goBack();\r\n        this.goBack = () => {} // Allow goBack() to be called only once\r\n    }\r\n\r\n    enableBodyScroll = (enable) => {\r\n        if (enable) { document.body.classList.remove('scroll_disabled');\r\n        } else { document.body.classList.add('scroll_disabled'); }\r\n    }\r\n}\r\n\r\nexport default withRouter(PokémonDetails);\r\n","import './PokémonItem.scss'\r\nimport React, {Component} from \"react\";\r\nimport {Pokémon} from \"../../entity/Pokémon\";\r\nimport capitalize from \"../../helpers/Capitalize\";\r\nimport typeToColor from \"../../helpers/TypeToColor\";\r\nimport PokémonService from \"../../helpers/services/PokémonService\";\r\nimport pokéball_closed from \"../../img/pokéball_closed.png\"\r\n\r\nclass PokémonItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pokémon: new Pokémon()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pokemon\" style={this.state.pokémon.sprites.front_default ?\r\n                    {backgroundImage: 'url(' + this.state.pokémon.sprites.front_default + ')'} :\r\n                    {backgroundImage: `url(${pokéball_closed})`, backgroundSize: '50%', backgroundPosition: 'center'}}>\r\n                    <h3 className=\"pokemon-name\">{capitalize(this.props.pokémonRef.name)}</h3>\r\n                    {this.state.pokémon.types[0].type && <p className=\"pokemon-type\"\r\n                                                            style={{backgroundColor: typeToColor(this.state.pokémon.types[0].type.name)}}>\r\n                        {capitalize(this.state.pokémon.types[0].type.name)}</p>}\r\n                </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.pokémonRef.url) {\r\n            this.loadPokémon();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n        if (prevState.pokémon.name !== this.props.pokémonRef.name) {\r\n            if (this.props.pokémonRef.url) {\r\n                this.loadPokémon();\r\n            }\r\n        }\r\n    }\r\n\r\n    loadPokémon = () => {\r\n        PokémonService.getPokémon(this.props.pokémonRef.name).then(json => {\r\n            if (json) {\r\n                this.setState({pokémon: json});\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default PokémonItem;\r\n","import React, {Component} from 'react';\r\nimport './../Pokémons.scss'\r\nimport PokémonItem from \"../../PokémonItem/PokémonItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PokémonService from \"../../../helpers/services/PokémonService\";\r\nimport scrollToTop from \"../../../helpers/ScrollToTop\";\r\nimport Loader from \"../../../helpers/Loader\";\r\n\r\nclass AllPokémons extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            jsonData: {\r\n                results: {}\r\n            },\r\n            page: 1,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pokemons\">\r\n                <div className=\"pokemons-header\">\r\n                    <h1>Pick a creature!</h1>\r\n                    <div onClick={this.sort} className=\"button button-sort\">Sort ⇕</div>\r\n                </div>\r\n                <ul className=\"pokemons-list\">\r\n                    {this.state.jsonData.results[0] &&\r\n                    this.state.jsonData.results.map((e, i) => {\r\n                        return <li className=\"pokemons-item\" key={i}>\r\n                            <Link to={`/pokémon/${e.name}`}><PokémonItem pokémonRef={e}/></Link>\r\n                        </li>})}\r\n                </ul>\r\n                {!this.state.jsonData.results.length && <h2>No results :(</h2>}\r\n\r\n                {this.state && this.state.jsonData.previous &&\r\n                <Link to={`/page/${this.state.page - 1}`} className=\"button button-prev\" onClick={() => this.loadPreviousPage()}>Previous page</Link>}\r\n\r\n                {this.state && this.state.jsonData.next &&\r\n                <Link to={`/page/${this.state.page + 1}`} className=\"button button-next\" onClick={() => this.loadNextPage()}>Next page</Link>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n        if (this.props.match.params !== prevProps.match.params) {\r\n            if ((this.props.match.params.pokemonName && !prevProps.match.params.pokemonName) || this.props.match.path === \"/random\" || this.props.match.path === \"/page/:page\") {\r\n                return; // Don't initiate data if pokémon is detailed OR when random pokemon is detailed OR when pagination is used\r\n            }\r\n            if (!!this.props.match.params.pokemonName || prevProps.match.params.pokemonName) { return; } // Don't update data when coming from or going to detail page\r\n            this.initData();\r\n        }\r\n    }\r\n\r\n    initData = () => {\r\n         if (this.props.match.params.page) { // Page to load is set, load paged pokémons from that page\r\n            this.setState({ page: parseInt(this.props.match.params.page) });\r\n            let offset = (this.props.match.params.page - 1) * PokémonService.basePageLimit;\r\n            this.loadPagedPokémon(offset);\r\n        } else { // Default case, load normal pokémon list\r\n            this.loadPokémons();\r\n        }\r\n    }\r\n\r\n    loadPokémons = () => {\r\n        Loader.showLoader();\r\n        PokémonService.getPokémons().then(json => {\r\n            this.setState({jsonData: json});\r\n            Loader.hideLoader();\r\n        });\r\n    }\r\n\r\n    loadPagedPokémon = (offset) => {\r\n        Loader.showLoader();\r\n        PokémonService.getPagedPokémons(offset).then(json => {\r\n            this.setState({jsonData: json});\r\n            Loader.hideLoader();\r\n        })\r\n    }\r\n\r\n    loadNextPage = () => {\r\n        Loader.showLoader();\r\n        this.setState({})\r\n        this.setState({ page: this.state.page + 1 })\r\n        PokémonService.doLoad(this.state.jsonData.next).then(json => {\r\n            this.setState({jsonData: json});\r\n            Loader.hideLoader();\r\n            scrollToTop();\r\n        });\r\n    }\r\n\r\n    loadPreviousPage = () => {\r\n        Loader.showLoader();\r\n        this.setState({})\r\n        this.setState({ page: this.state.page - 1 })\r\n        PokémonService.doLoad(this.state.jsonData.previous).then(json => {\r\n            this.setState({jsonData: json});\r\n            Loader.hideLoader();\r\n            scrollToTop();\r\n        });\r\n    }\r\n\r\n    sort = () => {\r\n        this.setState({state: this.state.jsonData.results.reverse()});\r\n    }\r\n}\r\n\r\nexport default AllPokémons;\r\n","import './TypeItem.scss'\r\nimport React from \"react\";\r\nimport capitalize from \"../../../helpers/Capitalize\";\r\nimport typeToColor from \"../../../helpers/TypeToColor\";\r\nimport {Link} from \"react-router-dom\";\r\nimport scrollToTop from \"../../../helpers/ScrollToTop\";\r\n\r\nfunction TypeItem(props) {\r\n    return (\r\n        <Link to={`/type/${props.type.name}`} onClick={scrollToTop}>\r\n            <div className=\"type\">\r\n                <div className=\"type-container\" style={{backgroundColor: typeToColor(props.type.name)}}>\r\n                    <h3 className=\"type-name\">{capitalize(props.type.name)}</h3>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default TypeItem;\r\n","import React, {Component} from 'react';\r\nimport './Types.scss'\r\nimport PokémonService from \"../../helpers/services/PokémonService\";\r\nimport TypeItem from \"./TypeItem/TypeItem\";\r\nimport Loader from \"../../helpers/Loader\";\r\n\r\nclass Types extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"types\">\r\n                <div className=\"types-header\">\r\n                    <h1>Choose a Type!</h1>\r\n                    <div onClick={this.sort} className=\"button button-sort\">Sort ⇕</div>\r\n                </div>\r\n                <ul className=\"types-list\">\r\n                    {this.state &&\r\n                    this.state.jsonData.results.map((type) => {\r\n                        return <li key={type.name} className=\"types-item\">\r\n                            <TypeItem type={type}>{type.name}</TypeItem>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadTypes();\r\n    }\r\n\r\n    loadTypes = () => {\r\n        Loader.showLoader();\r\n        PokémonService.getTypes().then(json => {\r\n            this.setState({jsonData: json});\r\n            Loader.hideLoader();\r\n        });\r\n    }\r\n\r\n    sort = () => {\r\n        this.setState({state: this.state.jsonData.results.reverse()});\r\n    }\r\n}\r\n\r\nexport default Types;\r\n","import React, {Component} from 'react';\r\nimport './../Pokémons.scss'\r\nimport PokémonItem from \"../../PokémonItem/PokémonItem\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PokémonService from \"../../../helpers/services/PokémonService\";\r\nimport capitalize from \"../../../helpers/Capitalize\";\r\nimport Loader from \"../../../helpers/Loader\";\r\n\r\nclass TypePokémons extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            jsonData: {\r\n                results: {}\r\n            },\r\n            title: \"... Type pokémon\",\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pokemons\">\r\n                <div className=\"pokemons-header\">\r\n                    <h1>{this.state.title}</h1>\r\n                    <div onClick={this.sort} className=\"button button-sort\">Sort ⇕</div>\r\n                </div>\r\n                <ul className=\"pokemons-list\">\r\n                    {this.state.jsonData.results[0] &&\r\n                    this.state.jsonData.results.map((e, i) => {\r\n                        return <li className=\"pokemons-item\" key={i}>\r\n                            <Link to={`/type/${this.props.match.params.type}/pokémon/${e.name}`}><PokémonItem pokémonRef={e}/></Link>\r\n                        </li>})}\r\n                </ul>\r\n                {!this.state.jsonData.results.length && <h2>No results :(</h2>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n        if (this.props.match.params !== prevProps.match.params) {\r\n            if ((!!this.props.match.params.pokemonName || prevProps.match.params.pokemonName) &&\r\n                (this.props.match.params.type === prevProps.match.params.type)) { return; } // Don't update data when coming from or going to detail page and type param hasn't changed\r\n            this.initData();\r\n        }\r\n    }\r\n\r\n    initData = () => {\r\n        if (this.props.match.params.type) { // Type to load is set, load pokémons from that type\r\n            this.setState({title: `${capitalize(this.props.match.params.type)} type Pokémon!`});\r\n            this.loadTypePokémons(this.props.match.params.type);\r\n        }\r\n    }\r\n\r\n    loadTypePokémons = (type) => {\r\n        Loader.showLoader();\r\n        PokémonService.getTypePokémons(type).then(json => {\r\n            this.setState({jsonData: json});\r\n            Loader.hideLoader();\r\n        });\r\n    }\r\n\r\n    sort = () => {\r\n        this.setState({state: this.state.jsonData.results.reverse()});\r\n    }\r\n}\r\n\r\nexport default TypePokémons;\r\n","import './PokémonItem.scss'\r\nimport React, {Component} from \"react\";\r\nimport capitalize from \"../../helpers/Capitalize\";\r\nimport typeToColor from \"../../helpers/TypeToColor\";\r\nimport pokéball_closed from \"../../img/pokéball_closed.png\"\r\n\r\nclass MyPokémonItem extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"pokemon\" style={this.props.pokémon.sprites.front_default ?\r\n                     {backgroundImage: 'url(' + this.props.pokémon.sprites.front_default + ')'} :\r\n                     {backgroundImage: `url(${pokéball_closed})`, backgroundSize: '50%', backgroundPosition: 'center'}}>\r\n                <h3 className=\"pokemon-name\">{capitalize(this.props.pokémon.name)}</h3>\r\n                {this.props.pokémon.types[0].type && <p className=\"pokemon-type\"\r\n                style={{backgroundColor: typeToColor(this.props.pokémon.types[0].type.name)}}>\r\n                {capitalize(this.props.pokémon.types[0].type.name)}</p>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPokémonItem;\r\n","import React, {Component} from 'react';\r\nimport './../Pokémons.scss'\r\nimport {Link} from \"react-router-dom\";\r\nimport CatchService from \"../../../helpers/services/CatchService\";\r\nimport MyPokémonItem from \"../../PokémonItem/MyPokémonItem\";\r\n\r\nclass MyPokémons extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            jsonData: {\r\n                results: { }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pokemons\">\r\n                <div className=\"pokemons-header\">\r\n                    <h1>My Pokémons!</h1>\r\n                    <div onClick={this.sort} className=\"button button-sort\">Sort ⇕</div>\r\n                </div>\r\n                <ul className=\"pokemons-list\">\r\n                    {this.state.jsonData.results[0] &&\r\n                    this.state.jsonData.results.map((pokémon, i) => {\r\n                        return <li className=\"pokemons-item\" key={i}>\r\n                            <Link to={`/my_pokémons/${pokémon.name}`}><MyPokémonItem pokémon={pokémon}/></Link>\r\n                        </li>})}\r\n                </ul>\r\n                {!this.state.jsonData.results.length && <h2>No caught Pokémons yet...</h2>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCaughtPokémons();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\r\n        if (this.props.match.params !== prevProps.match.params) {\r\n            if (!!this.props.match.params.pokemonName || prevProps.match.params.pokemonName) { return; } // Don't update data when coming from or going to detail page\r\n            this.loadCaughtPokémons();\r\n        }\r\n    }\r\n\r\n    loadCaughtPokémons() {\r\n        let jsonData = { results: (CatchService.getAll() || '') }\r\n        this.setState({jsonData: jsonData});\r\n    }\r\n\r\n    sort = () => {\r\n        this.setState({state: this.state.jsonData.results.reverse()});\r\n    }\r\n}\r\n\r\nexport default MyPokémons;\r\n","import './App.scss';\r\nimport React from \"react\";\r\nimport PokéHeader from \"./components/PokéHeader/PokéHeader\";\r\nimport PokéMenu from \"./components/PokéMenu/PokéMenu\";\r\nimport PokéFooter from \"./components/PokéFooter/PokéFooter\";\r\nimport PokémonDetails from \"./components/PokémonDetails/PokémonDetails\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport AllPokémons from \"./components/Pokémons/AllPokémons/AllPokémons\";\r\nimport Types from \"./components/Types/Types\";\r\nimport { AnimatedRoute } from 'react-router-transition';\r\nimport TypePokémons from \"./components/Pokémons/TypePokémons/TypePokémons\";\r\nimport MyPokémons from \"./components/Pokémons/MyPokémons/MyPokémons\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: 'PokéDex',\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div id=\"app\" className=\"menu-active\">\r\n                    <PokéHeader onMenuClick={this.toggleMenu} title={this.state.title}/>\r\n                    <PokéMenu onMenuClick={this.toggleMenu}/>\r\n\r\n                    <div className={'content'}>\r\n                        <Switch>\r\n                            <Route exact path={['/', '/pokémon/:pokemonName', '/random', '/page/:page']} render={({match}) =>\r\n                                <AllPokémons match={match}/>}/>\r\n\r\n                            <Route path={'/types'} render={({match}) =>\r\n                                <Types match={match}/>}/>\r\n\r\n                            <Route exact path={['/type/:type', '/type/:type/pokémon/:pokemonName']} render={({match}) =>\r\n                                <TypePokémons match={match}/>}/>\r\n\r\n                            <Route exact path={['/my_pokémons', '/my_pokémons/:pokemonName']} render={({match}) =>\r\n                                <MyPokémons match={match}/>}/>\r\n\r\n                            <Route render={() => <h1>404 Oops...</h1>}/>\r\n                        </Switch>\r\n                    </div>\r\n\r\n                    <PokéFooter/>\r\n\r\n                    <div id=\"loader\">\r\n                        <div/>\r\n                    </div>\r\n\r\n                    <AnimatedRoute exact path={['/random','/pokémon/:pokemonName', '/type/:type/pokémon/:pokemonName',\r\n                                                '/my_pokémons/:pokemonName']}\r\n                                   atEnter={{ opacity: 0 }} atLeave={{ opacity: 0 }} atActive={{ opacity: 1 }}\r\n                                   mapStyles={(styles) => ({ opacity: styles.opacity, })}\r\n                                   render={({match}) => <PokémonDetails match={match}/>}/>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        window.addEventListener(\"resize\", this.onResize); this.onResize();\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        document.getElementById(\"app\").classList.toggle(\"menu-active\");\r\n    }\r\n\r\n    onResize = () => {\r\n        if (window.innerWidth < 600) {\r\n            document.getElementById('app').classList.remove('menu-active');\r\n        } else if (window.innerWidth > 900) {\r\n            document.getElementById('app').classList.add('menu-active');\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}